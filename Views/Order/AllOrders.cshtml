@using b2b_solution.Models;
@using System.Data;


@{
    ViewBag.Title = "Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";
    DataTable dt = (DataTable)ViewBag.DealerType;
}

@model SearchComplete


<main class="main ">
    <div class="page-content pt-10">
        <div class="container">
            <div class="row">
                <div class="card mb-50">
                    <div class="card-header" style="background-color: #ecfaf3 !important">

                        <div class="card-header row " style="background-color: #ecfaf3 !important; border-style:none">
                            <div class="col-lg-2" style="margin-top:15px">
                                <h3 class="mb-0">Your Orders</h3>
                            </div>
                            <div class="col-lg-10 row " style="justify-content:end">


                                @if (dt.Rows[0]["cus_DealerType"].ToString() == "D")
                                {
                                    <div class="col-lg-4" style="justify-content:end">
                                        Customer
                                        @(Html.Kendo().DropDownList()
                .Name("DealerType")
                .HtmlAttributes(new { style = "width:100%; background-color:transparent !important", @class="form-control" })
                .OptionLabel("Select Sub Dealer")
                .DataTextField("CusName")
                .DataValueField("cusID")
                .DataSource(source => source
                        .Read(read =>
                        {
                            read.Action("GetSubDealers", "Order");
                        }))
                )
                                        <label id="lblDocType" style="color:red; font-size:small"></label>
                                    </div>
                                }

                                <div class="col-lg-2">
                                    From Date
                                    @(Html.Kendo().DatePicker()
          .Name("datepicker")
          .Format("dd MMM yyyy")
          .Value( Model.FromDate == null ? DateTime.Now.AddDays(-(DateTime.Now.Day - 1)) : DateTime.Parse(Model.FromDate))
          .HtmlAttributes(new { style = "width: 100%", title = "datepicker" , @id="fromDate" , @class="form-control" })
        )
                                    <label id="lblFromDate" style="color:red; font-size:small"></label>
                                </div>

                                <div class="col-lg-2">
                                    To Date
                                    @(Html.Kendo().DatePicker()
          .Name("datepicker")
          .Format("dd MMM yyyy")
          .Value(DateTime.Now)
          .HtmlAttributes(new { style = "width: 100%", title = "datepicker" , @id="ToDate" , @class="form-control" })
        )
                                    <label id="lblToDate" style="color:red; font-size:small"></label>
                                </div>

                                <div class="col-lg-2">
                                    <div class="form-group" style="margin-top:25px">
                                        <button onclick="FilterData()" class="btn btn-heading btn-block hover-up" name="login">Apply Filter</button>

                                    </div>
                                </div>
                                <div class="col-lg-2">
                                    <div class="form-group" style="margin-top:25px">
                                        <a href="/OrderTemplate/OrderTemplate" class="btn btn-heading btn-block hover-up" style="width:200px" name="template">Order Templates</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">

                            @( Html.Kendo().Grid<ViewAllOrder>()
    .Name("client")
    .Columns(columns =>
    {
        columns.Bound(p => p.OrderNo).Width(100).Filterable(ftb => ftb.Multi(true).Search(true).ItemTemplate("OrderFilter"));
        columns.Bound(p => p.CreatedDate).Width(100).Filterable(false);
        columns.Bound(p => p.CreatedBy).Width(100).Filterable(false);
        columns.Bound(p => p.DealerCode).Width(100).Title("Customer").Filterable(ftb => ftb.Multi(true).Search(true).ItemTemplate("DealerFilter"));
        columns.Bound(p => p.ExpectedDate).Width(100).Filterable(false);
        columns.Bound(p => p.LPO).Width(80).Filterable(false);
        columns.Bound(p => p.Attachment).Width(50).Title("LPO File").Filterable(false).ClientTemplate("<div style='display:flex' class='image product-thumbnail'><a href='#: Attachment #' target='_blank'>" +
            "#if(Attachment != ''){#<img height='30' src='../Content/imgs/order/attach.png'>#}#</a></div>");
        columns.Bound(p => p.Status).Width(80).Filterable(ftb => ftb.Multi(true).Search(true).ItemTemplate("StatusFilter"));
        //columns.Bound(p => p.Total).Width(50).Filterable(false);
        //columns.Bound(p => p.Discount).Width(50).Filterable(false).ClientTemplate("<span style='color:red'>#: Discount #</span>");
        columns.Bound(p => p.SubTotal).Width(50).Filterable(false).ClientTemplate("<span style='color:green'>#: SubTotal #</span>"); ;
        columns.Bound(p => p.VAT).Width(50).Filterable(false);
        columns.Bound(p => p.GradnTotal).Width(80).Title("Grand Total").Filterable(false);
        columns.Command(command => command.Custom("View Details").Click("ViewOrder").HtmlAttributes(new { @class = "btn btn-primary" })).Width(100);
        columns.Command(command => command.Custom("Re-Order").Click("ReOrder")).Width(80);
    })
    //.HtmlAttributes(new { style = "height: 550px;" })
    .Filterable()
    .Pageable()
    .Navigatable()
    .Sortable()
    //.Scrollable(scr=>scr.Height(550))
    .DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .PageSize(10)
    .ServerOperation(false)
        .Read("GetOrders", "Order", new { @FromDate = Model.FromDate == null ? DateTime.Now.AddDays(-(DateTime.Now.Day - 1)).ToString("yyyyMMdd") : DateTime.Parse(Model.FromDate).ToString("yyyyMMdd"), @ToDate = Model.ToDate == null ? DateTime.Now.ToString("yyyyMMdd") : DateTime.Parse(Model.ToDate).ToString("yyyyMMdd"), @SubDealer = Model.SubDealer == null ? "" : Model.SubDealer })
    .Update("GetOrders", "Order", new { @FromDate = Model.FromDate == null ? DateTime.Now.AddDays(-(DateTime.Now.Day - 1)).ToString("yyyyMMdd") : DateTime.Parse(Model.FromDate).ToString("yyyyMMdd"), @ToDate = Model.ToDate == null ? DateTime.Now.ToString("yyyyMMdd") : DateTime.Parse(Model.ToDate).ToString("yyyyMMdd"), SubDealer = Model.SubDealer == null ? "" : Model.SubDealer })
    )
    )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<div class="modal fade custom-modal" id="ReOrder" tabindex="-1" aria-labelledby="quickViewModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            <div class="modal-body">
                <div class="timeline">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <h4> Are you sure you want repeat this order ( <span id="OrderID"></span> )..?</h4>
                        </div>
                        <span hidden="hidden" id="ordID"></span>

                        <div class="col-lg-12 row">
                            <div class="col-lg-6" style="margin-top: 25px">
                                <button onclick="RepeatOrder()" class="btn btn-heading btn-block" name="login">Proceed</button>

                            </div>
                            <div class="col-lg-6" style="margin-top: 25px; text-align-last:end">
                                <button style="background-color:lightcoral" onclick="DismissModel()" class="btn btn-secondary ">Dismiss</button>

                            </div>
                        </div>

                       
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade custom-modal" id="ReOrderRes" tabindex="-1" aria-labelledby="quickViewModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            <div class="modal-body">
                <div class="timeline">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <h4 style="color:red"> We cannot repeat this order for now, please try again with another order <img height="40" src="../Content/imgs/order/sad.png" />  </h4>
                        </div>
                       
                        <div class="form-group" style="margin-top: 25px; text-align-last:end">
                            <button style="background-color:lightcoral" onclick="DismissModelRes()" class="btn btn-secondary ">OK</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>


    function OrderFilter(e) {

         if (e.field == "all") {
            //handle the check-all checkbox template

            return "<div class='chek-form><div class='custome-checkbox'><input class='form-check-input' type='checkbox'  /> <strong>#= all#</strong> </div></div>";
        } else {
            //handle the other checkboxes
            //return "<span class='col-lg-4' style='padding-left:0px; ' ><label style='display:flex'><input type='checkbox' style='width:13%' class='custome-checkbox' name='" + e.field + "' value='#=OrderNo#'/><span style='margin-top:20px'>#= OrderNo #</span></label></span>"
            return "<div class='chek-form><div class='custome-checkbox'><input class='form-check-input' type='checkbox' name='" + e.field + "'  value='#=OrderNo#' /><label class='form-check-label' for='exampleCheckbox1'><span>#= OrderNo #</span></label></div></div>";
        }

    }

    function StatusFilter(e) {

        if (e.field == "all") {
            //handle the check-all checkbox template

            return "<div class='chek-form><div class='custome-checkbox'><input class='form-check-input' type='checkbox'  /> <strong>#= all#</strong> </div></div>";
        } else {
            //handle the other checkboxes
            //return "<span class='col-lg-4' style='padding-left:0px; ' ><label style='display:flex'><input type='checkbox' style='width:13%' class='custome-checkbox' name='" + e.field + "' value='#=OrderNo#'/><span style='margin-top:20px'>#= OrderNo #</span></label></span>"
            return "<div class='chek-form><div class='custome-checkbox'><input class='form-check-input' type='checkbox' name='" + e.field + "'  value='#=Status#' /><label class='form-check-label' for='exampleCheckbox1'><span>#= Status #</span></label></div></div>";
        }

    }
    function DealerFilter(e) {

        if (e.field == "all") {

            return "<div class='chek-form><div class='custome-checkbox'><input class='form-check-input' type='checkbox'  /> <strong>#= all#</strong> </div></div>";
        } else {
            return "<div class='chek-form><div class='custome-checkbox'><input class='form-check-input' type='checkbox' name='" + e.field + "'  value='#=DealerCode#' /><label class='form-check-label' for='exampleCheckbox1'><span>#= DealerCode #</span></label></div></div>";
        }

    }

    function ViewOrder(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = '@Url.Action("ViewOrder", "Order")?id=' + dataItem.id ;
    }

     function FilterData() {
        var x = ValidateControls();
        if (x == true) {
            var fromDate = document.getElementById("fromDate").value;
            var toDate = document.getElementById("ToDate").value;
            var delaertype = 0;
            var dropdownlist = $("#DealerType").data("kendoDropDownList");
            var selectedItem = dropdownlist.dataItem();
            if (selectedItem.cusID !="") {

                var delaertype = selectedItem.cusID;
            }


            window.location.href = '@Url.Action("AllOrders", "Order")?FromDate=' + fromDate + '&ToDate=' + toDate + '&SubDealer=' + delaertype;
        } else {

        }
    }

    function GotoTemplate() {

        window.location.href = '@Url.Action("OrderTemplate", "Order")';

    }


    function ValidateControls() {
        var valCount = 0;
        if (document.getElementById("fromDate").value == "") {
            valCount++;
            document.getElementById("lblFromDate").innerHTML = "Please enter from date";
        } else {
            document.getElementById("lblFromDate").innerHTML = "";
        }

        if (document.getElementById("ToDate").value == "") {
            valCount++;
            document.getElementById("lblToDate").innerHTML = "Please enter to date";
        } else {
            document.getElementById("lblToDate").innerHTML = "";
        }

        if (valCount > 0) {
            return false;
        } else {
            return true;
        }
    }

    function ReOrder(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $('#OrderID').text(dataItem.OrderNo)
        $('#ordID').text(dataItem.id)
        $('#ReOrder').modal('show');
    }

    function DismissModel() {
        $('#ReOrder').modal('hide');
        $('#OrderID').text('')
        $('#ordID').text('')
    }

    function DismissModelRes() {
        $('#ReOrderRes').modal('hide');

    }

    function RepeatOrder() {

        const span = document.getElementById('ordID');

        const text1 = span.textContent;
           $.ajax({
            type: "GET",
            url: '@Url.Action("getPrevOrders", "Order")',
            contentType: "application/json; charset=utf-8",

               data: {
                   "ordID": text1
               },
               dataType: "json",
               success: function (data) {
                   if (data.mode == "1") {
                       window.location.href = '@Url.Action("Cart", "Home")';
                   } else {
                       DismissModel();
                       $('#ReOrderRes').modal('show');
                   }
                }
            });
    }

</script>

<style>

    .k-primary {
        padding: 0px !important
    }

    .k-check-all {
        width: 10%
    }

    .k-space-right {
        height: 32px
    }

    .k-textbox > input {
        height: 30px
    }

    .k-header {
        background-color: #ecfaf3;
    }

    .k-pager-wrap {
        background-color: #ecfaf3;
    }

    .k-grid .k-alt {
        background-color: #ecfaf3; /* specify the alternate background-color */
    }

    .k-grid-header .k-header {
        background-color: #ecfaf3;
    }
</style>
