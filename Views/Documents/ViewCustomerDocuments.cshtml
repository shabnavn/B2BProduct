@using b2b_solution.Models;
@{
    ViewBag.Title = "Supports";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model SearchComplete



<main class="main ">
    <div class="page-content pt-10">
        <div class="container">
            <div class="row">
                <div class="card mb-50">
                    <div class="card-header" style="background-color: #ecfaf3 !important">

                        <div class="card-header row " style="background-color: #ecfaf3 !important; border-style:none">
                            <div class="col-lg-3" style="margin-top:15px">
                                <h3 class="mb-0">Uploaded Documents</h3>
                            </div>
                            <div class="col-lg-9 row " style="justify-content:end">
                                <div class="col-lg-2">
                                    <div class="form-group" style="margin-top:25px">
                                        <a href="/Documents/NewKYCDocument" style="background-color:gray" class="btn btn-brush-1 btn-block hover-up" name="login">Upload New Document</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">



                            @( Html.Kendo().Grid<ViewAllCusDocuments>
()
.Name("client")
.Columns(columns =>
{
    columns.Bound(p => p.Type).Width(100).Filterable(false);
    columns.Bound(p => p.DocNo).Width(100).Filterable(false);
    columns.Bound(p => p.StartDate).Width(80).Filterable(false);
    columns.Bound(p => p.ExpiryDate).Width(80).Filterable(false);
    columns.Bound(p => p.Image).Width(50).Title("Document").Filterable(false).ClientTemplate("<div style='display:flex' class='image product-thumbnail'><a href='#: Image #' target='_blank'>" +
            "#if(Image != ''){#<img height='30' src='../Content/imgs/order/attach.png'>#}#</a></div>");
    columns.Bound(p => p.CreatedDate).Width(80).Title("Upload Date").Filterable(false);
    columns.Bound(p => p.CreatedBy).Width(80).Title("Upload By").Filterable(false);
    columns.Bound(p => p.Status).Width(80).Filterable(false); //(ftb => ftb.Multi(true).Search(true).ItemTemplate("StatusFilter"));
    columns.Command(command => command.Custom("Edit").Click("EditDoc").HtmlAttributes(new { @class = "btn btn-primary"})).Width(80);
})
    //.HtmlAttributes(new { style = "height: 550px;" })
    .Filterable()
    .Pageable()
    .Navigatable()
    .Sortable()
    //.Scrollable(scr=>scr.Height(550))
    .DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .PageSize(10)
    .ServerOperation(false)
    .Read("GetDocuments", "Documents" , new { @FromDate = Model.FromDate == null ? DateTime.Now.AddDays(-(DateTime.Now.Day - 1)).ToString("yyyyMMdd") : DateTime.Parse(Model.FromDate).ToString("yyyyMMdd"), @ToDate = Model.ToDate == null ? DateTime.Now.ToString("yyyyMMdd") : DateTime.Parse(Model.ToDate).ToString("yyyyMMdd") })
    .Update("GetDocuments", "Documents", new { @FromDate = Model.FromDate == null ? DateTime.Now.AddDays(-(DateTime.Now.Day - 1)).ToString("yyyyMMdd") : DateTime.Parse(Model.FromDate).ToString("yyyyMMdd"), @ToDate = Model.ToDate == null ? DateTime.Now.ToString("yyyyMMdd") : DateTime.Parse(Model.ToDate).ToString("yyyyMMdd") })
    )
    )


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<script>
    function EditDoc(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = '@Url.Action("EditDocument", "Documents")?id=' + dataItem.id ;
    }
</script>